(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{418:function(t,_,v){t.exports=v.p+"assets/img/mk-20220821184655.813b8000.png"},500:function(t,_,v){"use strict";v.r(_);var s=v(10),a=Object(s.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("在 Doris 中，数据以表（Table）的形式进行逻辑上的描述。 一张表包括行（Row）和列（Column）。Row 即用户的一行数据。Column 用于描述一行数据中不同的字段。")]),t._v(" "),s("p",[t._v("Column 可以分为两大类：Key 和 Value。从业务角度看，Key 和 Value 可以分别对应维度列和指标列。")]),t._v(" "),s("p",[t._v("Doris 的数据模型主要分为3类:")]),t._v(" "),s("ul",[s("li",[t._v("Aggregate")]),t._v(" "),s("li",[t._v("Unique")]),t._v(" "),s("li",[t._v("Duplicate")])]),t._v(" "),s("h2",{attrs:{id:"aggregate-聚合模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-聚合模型"}},[t._v("#")]),t._v(" Aggregate（聚合模型）")]),t._v(" "),s("p",[t._v("我们以实际的例子来说明什么是聚合模型，以及如何正确的使用聚合模型。")]),t._v(" "),s("h3",{attrs:{id:"示例1-导入数据聚合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例1-导入数据聚合"}},[t._v("#")]),t._v(" 示例1：导入数据聚合")]),t._v(" "),s("p",[t._v("假设业务有如下数据表模式：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("AggregationType")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("user_id")]),t._v(" "),s("td",[t._v("LARGEINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户id")])]),t._v(" "),s("tr",[s("td",[t._v("date")]),t._v(" "),s("td",[t._v("DATE")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("数据灌入日期")])]),t._v(" "),s("tr",[s("td",[t._v("city")]),t._v(" "),s("td",[t._v("VARCHAR(20)")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户所在城市")])]),t._v(" "),s("tr",[s("td",[t._v("age")]),t._v(" "),s("td",[t._v("SMALLINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户年龄")])]),t._v(" "),s("tr",[s("td",[t._v("sex")]),t._v(" "),s("td",[t._v("TINYINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户性别")])]),t._v(" "),s("tr",[s("td",[t._v("last_visit_date")]),t._v(" "),s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户最后一次访问时间")])]),t._v(" "),s("tr",[s("td",[t._v("cost")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("SUM")]),t._v(" "),s("td",[t._v("用户总消费")])]),t._v(" "),s("tr",[s("td",[t._v("max_dwell_time")]),t._v(" "),s("td",[t._v("INT")]),t._v(" "),s("td",[t._v("MAX")]),t._v(" "),s("td",[t._v("用户最大停留时间")])]),t._v(" "),s("tr",[s("td",[t._v("min_dwell_time")]),t._v(" "),s("td",[t._v("INT")]),t._v(" "),s("td",[t._v("MIN")]),t._v(" "),s("td",[t._v("用户最小停留时间")])])])]),t._v(" "),s("p",[t._v("如果转换成建表语句则如下（省略建表语句中的 Partition 和 Distribution 信息）")]),t._v(" "),s("div",{staticClass:"language-SQL line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" example_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expamle_tbl\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" LARGEINT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据灌入日期时间"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户所在城市"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SMALLINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户年龄"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TINYINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户性别"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("last_visit_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1970-01-01 00:00:00"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户最后一次访问时间"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("cost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BIGINT")]),t._v(" SUM "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户总消费"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("max_dwell_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" MAX "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户最大停留时间"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("min_dwell_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" MIN "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"99999"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户最小停留时间"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAGGREGATE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTRIBUTED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HASH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" BUCKETS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nPROPERTIES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replication_allocation"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag.location.default: 1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("可以看到，这是一个典型的用户信息和访问行为的事实表。 在一般星型模型中，用户信息和访问行为一般分别存放在维度表和事实表中。这里我们为了更加方便的解释 Doris 的数据模型，将两部分信息统一存放在一张表中。")]),t._v(" "),s("p",[t._v("表中的列按照是否设置了 AggregationType，分为 Key (维度列) 和 Value（指标列）。")]),t._v(" "),s("p",[t._v("没有设置 AggregationType 的，如 user_id、date、age ... 等称为 Key，而设置了 AggregationType 的称为 Value。")]),t._v(" "),s("p",[t._v("当我们导入数据时，对于 Key 列相同的行会聚合成一行，而 Value 列会按照设置的 AggregationType 进行聚合。")]),t._v(" "),s("p",[t._v("AggregationType 目前有以下四种聚合方式：")]),t._v(" "),s("ol",[s("li",[t._v("SUM：求和，多行的 Value 进行累加。")]),t._v(" "),s("li",[t._v("REPLACE：替代，下一批数据中的 Value 会替换之前导入过的行中的 Value。")]),t._v(" "),s("li",[t._v("MAX：保留最大值。")]),t._v(" "),s("li",[t._v("MIN：保留最小值。")])]),t._v(" "),s("p",[t._v("假设我们有以下导入数据（原始数据）：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 06:00:00")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("15")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 10:20:22")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("6")])])])]),t._v(" "),s("p",[t._v("我们假设这是一张记录用户访问某商品页面行为的表。我们以第一行数据为例，解释如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("用户id，每个用户唯一识别id")])]),t._v(" "),s("tr",[s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("数据入库时间，精确到日期")])]),t._v(" "),s("tr",[s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("用户所在城市")])]),t._v(" "),s("tr",[s("td",[t._v("20")]),t._v(" "),s("td",[t._v("用户年龄")])]),t._v(" "),s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("性别男（1 代表女性）")])]),t._v(" "),s("tr",[s("td",[t._v("2017-10-01 06:00:00")]),t._v(" "),s("td",[t._v("用户本次访问该页面的时间，精确到秒")])]),t._v(" "),s("tr",[s("td",[t._v("20")]),t._v(" "),s("td",[t._v("用户本次访问产生的消费")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("用户本次访问，驻留该页面的时间")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("用户本次访问，驻留该页面的时间（冗余）")])])])]),t._v(" "),s("p",[t._v("那么当这批数据正确导入到 Doris 中后，Doris 中最终存储如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 10:20:22")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("6")])])])]),t._v(" "),s("p",[t._v("可以看到，用户 10000 只剩下了一行聚合后的数据。而其余用户的数据和原始数据保持一致。这里先解释下用户 10000 聚合后的数据：")]),t._v(" "),s("p",[t._v("前5列没有变化，从第6列 last_visit_date 开始：")]),t._v(" "),s("p",[t._v("2017-10-01 07:00:00：因为 last_visit_date 列的聚合方式为 REPLACE，所以 2017-10-01 07:00:00 替换了 2017-10-01 06:00:00 保存了下来。")]),t._v(" "),s("p",[t._v("注：在同一个导入批次中的数据，对于 REPLACE 这种聚合方式，替换顺序不做保证。如在这个例子中，最终保存下来的，也有可能是 2017-10-01 06:00:00。而对于不同导入批次中的数据，可以保证，后一批次的数据会替换前一批次。")]),t._v(" "),s("p",[t._v("35：因为 cost 列的聚合类型为 SUM，所以由 20 + 15 累加获得 35。")]),t._v(" "),s("p",[t._v("10：因为 max_dwell_time 列的聚合类型为 MAX，所以 10 和 2 取最大值，获得 10。")]),t._v(" "),s("p",[t._v("2：因为 min_dwell_time 列的聚合类型为 MIN，所以 10 和 2 取最小值，获得 2。")]),t._v(" "),s("font",{staticStyle:{color:"red"}},[t._v("\n经过聚合，Doris 中最终只会存储聚合后的数据。换句话说，即明细数据会丢失，用户不能够再查询到聚合前的明细数据了。\n")]),t._v(" "),s("h3",{attrs:{id:"示例2-保留明细数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例2-保留明细数据"}},[t._v("#")]),t._v(" 示例2：保留明细数据")]),t._v(" "),s("p",[t._v("接示例1，我们将表结构修改如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:v(418),alt:""}})]),t._v(" "),s("font",{staticStyle:{color:"red"}},[t._v("\n即增加了一列 timestamp，记录精确到秒的数据灌入时间。 \n")]),t._v(" "),s("p",[t._v("同时，将AGGREGATE KEY设置为AGGREGATE KEY(user_id, date, timestamp, city, age, sex)")]),t._v(" "),s("p",[t._v("导入数据如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("timestamp")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 08:00:05")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 06:00:00")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 09:00:05")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("15")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 18:12:10")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("2017-10-02 13:10:00")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("2017-10-02 13:15:00")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 12:12:48")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("2017-10-03 12:38:20")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 10:20:22")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("6")])])])]),t._v(" "),s("p",[t._v("那么当这批数据正确导入到 Doris 中后，Doris 中最终存储如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("timestamp")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 08:00:05")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 06:00:00")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 09:00:05")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("15")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 18:12:10")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("2017-10-02 13:10:00")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("2017-10-02 13:15:00")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("2017-10-01 12:12:48")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("2017-10-03 12:38:20")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 10:20:22")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("6")])])])]),t._v(" "),s("p",[t._v("我们可以看到，存储的数据，和导入数据完全一样，没有发生任何聚合。这是因为，这批数据中，因为加入了 timestamp 列，所有行的 Key 都不完全相同。也就是说，只要保证导入的数据中，每一行的 Key 都不完全相同，那么即使在聚合模型下，Doris 也可以保存完整的明细数据。")]),t._v(" "),s("h3",{attrs:{id:"示例3-导入数据与已有数据聚合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例3-导入数据与已有数据聚合"}},[t._v("#")]),t._v(" 示例3：导入数据与已有数据聚合")]),t._v(" "),s("p",[t._v("接示例1。假设现在表中已有数据如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 10:20:22")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("6")])])])]),t._v(" "),s("p",[t._v("我们再导入一批新的数据：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 11:22:00")]),t._v(" "),s("td",[t._v("44")]),t._v(" "),s("td",[t._v("19")]),t._v(" "),s("td",[t._v("19")])]),t._v(" "),s("tr",[s("td",[t._v("10005")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("长沙")]),t._v(" "),s("td",[t._v("29")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-03 18:11:02")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("1")])])])]),t._v(" "),s("p",[t._v("那么当这批数据正确导入到 Doris 中后，Doris 中最终存储如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("city")]),t._v(" "),s("th",[t._v("age")]),t._v(" "),s("th",[t._v("sex")]),t._v(" "),s("th",[t._v("last_visit_date")]),t._v(" "),s("th",[t._v("cost")]),t._v(" "),s("th",[t._v("max_dwell_time")]),t._v(" "),s("th",[t._v("min_dwell_time")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10000")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 07:00:00")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("10")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("北京")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-01 17:05:45")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("22")]),t._v(" "),s("td",[t._v("22")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("上海")]),t._v(" "),s("td",[t._v("20")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-02 12:59:12")]),t._v(" "),s("td",[t._v("200")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-10-02")]),t._v(" "),s("td",[t._v("广州")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-02 11:20:00")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("11")]),t._v(" "),s("td",[t._v("11")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-01")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-01 10:00:15")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("10004")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("深圳")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("2017-10-03 11:22:00")]),t._v(" "),s("td",[t._v("55")]),t._v(" "),s("td",[t._v("19")]),t._v(" "),s("td",[t._v("6")])]),t._v(" "),s("tr",[s("td",[t._v("10005")]),t._v(" "),s("td",[t._v("2017-10-03")]),t._v(" "),s("td",[t._v("长沙")]),t._v(" "),s("td",[t._v("29")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2017-10-03 18:11:02")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("1")])])])]),t._v(" "),s("p",[t._v("可以看到，用户 10004 的已有数据和新导入的数据发生了聚合。同时新增了 10005 用户的数据。")]),t._v(" "),s("p",[t._v("数据的聚合，在 Doris 中有如下三个阶段发生：")]),t._v(" "),s("ol",[s("li",[t._v("每一批次数据导入的 ETL 阶段。该阶段会在每一批次导入的数据内部进行聚合。")]),t._v(" "),s("li",[t._v("底层 BE 进行数据 Compaction 的阶段。该阶段，BE 会对已导入的不同批次的数据进行进一步的聚合。")]),t._v(" "),s("li",[t._v("数据查询阶段。在数据查询时，对于查询涉及到的数据，会进行对应的聚合。")])]),t._v(" "),s("blockquote",[s("p",[t._v("数据在不同时间，可能聚合的程度不一致。比如一批数据刚导入时，可能还未与之前已存在的数据进行聚合。但是对于用户而言，用户只能查询到聚合后的数据。即不同的聚合程度对于用户查询而言是透明的。用户需始终认为数据以最终的完成的聚合程度存在，而不应假设某些聚合还未发生。（可参阅聚合模型的局限性一节获得更多详情。）")])]),t._v(" "),s("h2",{attrs:{id:"unique-唯一模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unique-唯一模型"}},[t._v("#")]),t._v(" Unique（唯一模型）")]),t._v(" "),s("p",[t._v("在某些多维分析场景下，用户更关注的是如何保证 Key 的唯一性，即如何获得 Primary Key 唯一性约束。因此，我们引入了 Unique 的数据模型。该模型本质上是聚合模型的一个特例，也是一种简化的表结构表示方式。我们举例说明。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("IsKey")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("user_id")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("Yes")]),t._v(" "),s("td",[t._v("用户id")])]),t._v(" "),s("tr",[s("td",[t._v("username")]),t._v(" "),s("td",[t._v("VARCHAR(50)")]),t._v(" "),s("td",[t._v("Yes")]),t._v(" "),s("td",[t._v("用户昵称")])]),t._v(" "),s("tr",[s("td",[t._v("city")]),t._v(" "),s("td",[t._v("VARCHAR(20)")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户所在城市")])]),t._v(" "),s("tr",[s("td",[t._v("age")]),t._v(" "),s("td",[t._v("SMALLINT")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户年龄")])]),t._v(" "),s("tr",[s("td",[t._v("sex")]),t._v(" "),s("td",[t._v("TINYINT")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户性别")])]),t._v(" "),s("tr",[s("td",[t._v("phone")]),t._v(" "),s("td",[t._v("LARGEINT")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户电话")])]),t._v(" "),s("tr",[s("td",[t._v("address")]),t._v(" "),s("td",[t._v("VARCHAR(500)")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户住址")])]),t._v(" "),s("tr",[s("td",[t._v("register_time")]),t._v(" "),s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("用户注册时间")])])])]),t._v(" "),s("p",[t._v("这是一个典型的用户基础信息表。这类数据没有聚合需求，只需保证主键唯一性。（这里的主键为 user_id + username）。那么我们的建表语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" example_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expamle_tbl\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" LARGEINT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户昵称"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户所在城市"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SMALLINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户年龄"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TINYINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户性别"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" LARGEINT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户电话"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户地址"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("register_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户注册时间"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTRIBUTED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HASH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" BUCKETS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nPROPERTIES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replication_allocation"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag.location.default: 1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("而这个表结构，完全同等于以下使用聚合模型描述的表结构：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("AggregationType")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("user_id")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户id")])]),t._v(" "),s("tr",[s("td",[t._v("username")]),t._v(" "),s("td",[t._v("VARCHAR(50)")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户昵称")])]),t._v(" "),s("tr",[s("td",[t._v("city")]),t._v(" "),s("td",[t._v("VARCHAR(20)")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户所在城市")])]),t._v(" "),s("tr",[s("td",[t._v("age")]),t._v(" "),s("td",[t._v("SMALLINT")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户年龄")])]),t._v(" "),s("tr",[s("td",[t._v("sex")]),t._v(" "),s("td",[t._v("TINYINT")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户性别")])]),t._v(" "),s("tr",[s("td",[t._v("phone")]),t._v(" "),s("td",[t._v("LARGEINT")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户电话")])]),t._v(" "),s("tr",[s("td",[t._v("address")]),t._v(" "),s("td",[t._v("VARCHAR(500)")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户住址")])]),t._v(" "),s("tr",[s("td",[t._v("register_time")]),t._v(" "),s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("REPLACE")]),t._v(" "),s("td",[t._v("用户注册时间")])])])]),t._v(" "),s("p",[t._v("及建表语句：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" example_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expamle_tbl\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" LARGEINT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户昵称"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户所在城市"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SMALLINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户年龄"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TINYINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户性别"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" LARGEINT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户电话"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户地址"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("register_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户注册时间"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAGGREGATE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTRIBUTED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HASH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" BUCKETS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nPROPERTIES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replication_allocation"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag.location.default: 1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("即 Unique 模型完全可以用聚合模型中的 REPLACE 方式替代。其内部的实现方式和数据存储方式也完全一样。这里不再继续举例说明。")]),t._v(" "),s("h2",{attrs:{id:"duplicate-明细模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#duplicate-明细模型"}},[t._v("#")]),t._v(" Duplicate（明细模型）")]),t._v(" "),s("p",[t._v("在某些多维分析场景下，数据既没有主键，也没有聚合需求。因此，我们引入 Duplicate 数据模型来满足这类需求。举例说明。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("SortKey")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("timestamp")]),t._v(" "),s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("Yes")]),t._v(" "),s("td",[t._v("日志时间")])]),t._v(" "),s("tr",[s("td",[t._v("type")]),t._v(" "),s("td",[t._v("INT")]),t._v(" "),s("td",[t._v("Yes")]),t._v(" "),s("td",[t._v("日志类型")])]),t._v(" "),s("tr",[s("td",[t._v("error_code")]),t._v(" "),s("td",[t._v("INT")]),t._v(" "),s("td",[t._v("Yes")]),t._v(" "),s("td",[t._v("错误码")])]),t._v(" "),s("tr",[s("td",[t._v("error_msg")]),t._v(" "),s("td",[t._v("VARCHAR(1024)")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("错误详细信息")])]),t._v(" "),s("tr",[s("td",[t._v("op_id")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("负责人id")])]),t._v(" "),s("tr",[s("td",[t._v("op_time")]),t._v(" "),s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("No")]),t._v(" "),s("td",[t._v("处理时间")])])])]),t._v(" "),s("p",[t._v("建表语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" example_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expamle_tbl\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"日志时间"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"日志类型"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("error_code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误码"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("error_msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误详细信息"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("op_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BIGINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"负责人id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("op_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"处理时间"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DUPLICATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTRIBUTED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HASH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" BUCKETS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nPROPERTIES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replication_allocation"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag.location.default: 1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("font",{staticStyle:{color:"red"}},[t._v("\n这种数据模型区别于 Aggregate 和 Unique 模型。数据完全按照导入文件中的数据进行存储，不会有任何聚合。即使两行数据完全相同，也都会保留。 \n而在建表语句中指定的 DUPLICATE KEY，只是用来指明底层数据按照那些列进行排序。（更贴切的名称应该为 “Sorted Column”，这里取名 “DUPLICATE KEY” 只是用以明确表示所用的数据模型。关于 “Sorted Column”的更多解释，可以参阅前缀索引）。\n")]),t._v(" "),s("p",[t._v("在 DUPLICATE KEY 的选择上，我们建议适当的选择前 2-4 列就可以。")]),t._v(" "),s("p",[t._v("这种数据模型适用于既没有聚合需求，又没有主键唯一性约束的原始数据的存储。更多使用场景，可参阅聚合模型的局限性小节。")]),t._v(" "),s("h2",{attrs:{id:"聚合模型的局限性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合模型的局限性"}},[t._v("#")]),t._v(" 聚合模型的局限性")]),t._v(" "),s("p",[t._v("这里我们针对 Aggregate 模型（包括 Unique 模型），来介绍下聚合模型的局限性。")]),t._v(" "),s("p",[t._v("在聚合模型中，模型对外展现的，是最终聚合后的数据。也就是说，任何还未聚合的数据（比如说两个不同导入批次的数据），必须通过某种方式，以保证对外展示的一致性。我们举例说明。")]),t._v(" "),s("p",[t._v("假设表结构如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("AggregationType")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("user_id")]),t._v(" "),s("td",[t._v("LARGEINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户id")])]),t._v(" "),s("tr",[s("td",[t._v("date")]),t._v(" "),s("td",[t._v("DATE")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("数据灌入日期")])]),t._v(" "),s("tr",[s("td",[t._v("cost")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("SUM")]),t._v(" "),s("td",[t._v("用户总消费")])])])]),t._v(" "),s("p",[t._v("假设存储引擎中有如下两个已经导入完成的批次的数据：")]),t._v(" "),s("p",[t._v("batch 1")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("50")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("39")])])])]),t._v(" "),s("p",[t._v("batch 2")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-11-22")]),t._v(" "),s("td",[t._v("22")])])])]),t._v(" "),s("p",[t._v("可以看到，用户 10001 分属在两个导入批次中的数据还没有聚合。但是为了保证用户只能查询到如下最终聚合后的数据：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("51")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("39")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-11-22")]),t._v(" "),s("td",[t._v("22")])])])]),t._v(" "),s("p",[t._v("我们在查询引擎中加入了聚合算子，来保证数据对外的一致性。")]),t._v(" "),s("p",[t._v("另外，在聚合列（Value）上，执行与聚合类型不一致的聚合类查询时，要注意语意。比如我们在如上示例中执行如下查询：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("得到的结果是 5，而不是 1。")]),t._v(" "),s("p",[t._v("同时，这种一致性保证，在某些查询中，会极大的降低查询效率。")]),t._v(" "),s("p",[t._v("我们以最基本的 count(*) 查询为例：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在其他数据库中，这类查询都会很快的返回结果。因为在实现上，我们可以通过如“导入时对行进行计数，保存 count 的统计信息”，或者在查询时“仅扫描某一列数据，获得 count 值”的方式，只需很小的开销，即可获得查询结果。但是在 Doris 的聚合模型中，这种查询的开销非常大。")]),t._v(" "),s("p",[t._v("我们以刚才的数据为例：")]),t._v(" "),s("p",[t._v("batch 1")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("50")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("39")])])])]),t._v(" "),s("p",[t._v("batch 2")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-11-22")]),t._v(" "),s("td",[t._v("22")])])])]),t._v(" "),s("p",[t._v("因为最终的聚合结果为：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("user_id")]),t._v(" "),s("th",[t._v("date")]),t._v(" "),s("th",[t._v("cost")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-20")]),t._v(" "),s("td",[t._v("51")])]),t._v(" "),s("tr",[s("td",[t._v("10001")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("10002")]),t._v(" "),s("td",[t._v("2017-11-21")]),t._v(" "),s("td",[t._v("39")])]),t._v(" "),s("tr",[s("td",[t._v("10003")]),t._v(" "),s("td",[t._v("2017-11-22")]),t._v(" "),s("td",[t._v("22")])])])]),t._v(" "),s("p",[t._v("所以，"),s("code",[t._v("select count(*) from table;")]),t._v(" 的正确结果应该为 4。")]),t._v(" "),s("p",[t._v("但如果我们只扫描 user_id 这一列，如果加上查询时聚合，最终得到的结果是 3（10001, 10002, 10003）。而如果不加查询时聚合，则得到的结果是 5（两批次一共5行数据）。可见这两个结果都是不对的。")]),t._v(" "),s("p",[t._v("为了得到正确的结果，我们必须同时读取 user_id 和 date 这两列的数据，再加上查询时聚合，才能返回 4 这个正确的结果。也就是说，在 count() 查询中，Doris 必须扫描所有的 AGGREGATE KEY 列（这里就是 user_id 和 date），并且聚合后，才能得到语意正确的结果。当聚合列非常多时，count() 查询需要扫描大量的数据。")]),t._v(" "),s("p",[t._v("因此，当业务上有频繁的 count("),s("em",[t._v(") 查询时，我们建议用户通过增加一个值恒为 1 的，聚合类型为 SUM 的列来模拟 count(")]),t._v(")。如刚才的例子中的表结构，我们修改如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ColumnName")]),t._v(" "),s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("AggregateType")]),t._v(" "),s("th",[t._v("Comment")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("user_id")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("用户id")])]),t._v(" "),s("tr",[s("td",[t._v("date")]),t._v(" "),s("td",[t._v("DATE")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("数据灌入日期")])]),t._v(" "),s("tr",[s("td",[t._v("cost")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("SUM")]),t._v(" "),s("td",[t._v("用户总消费")])]),t._v(" "),s("tr",[s("td",[t._v("count")]),t._v(" "),s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("SUM")]),t._v(" "),s("td",[t._v("用于计算count")])])])]),t._v(" "),s("p",[t._v("增加一个 count 列，并且导入数据中，该列值恒为 1。则 select count("),s("em",[t._v(") from table; 的结果等价于 select sum(count) from table;。而后者的查询效率将远高于前者。不过这种方式也有使用限制，就是用户需要自行保证，不会重复导入 AGGREGATE KEY 列都相同的行。否则，select sum(count) from table; 只能表述原始导入的行数，而不是 select count(")]),t._v(") from table; 的语义。")]),t._v(" "),s("p",[t._v("另一种方式，就是 将如上的 count 列的聚合类型改为 REPLACE，且依然值恒为 1。那么 select sum(count) from table; 和 select count(*) from table; 的结果将是一致的。并且这种方式，没有导入重复行的限制。")]),t._v(" "),s("p",[t._v("Duplicate 模型\nDuplicate 模型没有聚合模型的这个局限性。因为该模型不涉及聚合语意，在做 count(*) 查询时，任意选择一列查询，即可得到语意正确的结果。")]),t._v(" "),s("h2",{attrs:{id:"数据模型的选择建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据模型的选择建议"}},[t._v("#")]),t._v(" 数据模型的选择建议")]),t._v(" "),s("p",[s("font",{staticStyle:{color:"red"}},[t._v("因为数据模型在建表时就已经确定，且无法修改")]),t._v("。所以，选择一个合适的数据模型非常重要。")],1),t._v(" "),s("ol",[s("li",[s("p",[t._v("Aggregate 模型可以通过预聚合，极大地降低聚合查询时所需扫描的数据量和查询的计算量，非常适合有固定模式的报表类查询场景。但是该模型对 count(*) 查询很不友好。同时因为固定了 Value 列上的聚合方式，在进行其他类型的聚合查询时，需要考虑语意正确性。")])]),t._v(" "),s("li",[s("p",[t._v("Unique 模型针对需要唯一主键约束的场景，可以保证主键唯一性约束。但是无法利用 ROLLUP 等预聚合带来的查询优势（因为本质是 REPLACE，没有 SUM 这种聚合方式）。")])])]),t._v(" "),s("h2",{attrs:{id:"注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Unique 模型仅支持整行更新，如果用户既需要唯一主键约束，又需要更新部分列（例如将多张源表导入到一张 doris 表的情形），则可以考虑使用 Aggregate 模型，同时将非主键列的聚合类型设置为 REPLACE_IF_NOT_NULL。具体的用法可以参考语法手册")])]),t._v(" "),s("li",[s("p",[t._v("Duplicate 适合任意维度的 Ad-hoc 查询。虽然同样无法利用预聚合的特性，但是不受聚合模型的约束，可以发挥列存模型的优势（只读取相关列，而不需要读取所有 Key 列）。")])])])],1)}),[],!1,null,null,null);_.default=a.exports}}]);